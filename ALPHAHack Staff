//Made by Arceus_Matt Copyright © 2015.

var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
var Button = android.widget.Button;
var LinearLayout = android.widget.LinearLayout;
var RelativeLayout = android.widget.RelativeLayout;
var PopupWindow = android.widget.PopupWindow;
var ScrollView = android.widget.ScrollView;
var TextView = android.widget.TextView;
var CheckBox = android.widget.CheckBox;
var Toast = android.widget.Toast;
var Runnable = java.lang.Runnable;
var View = android.view.View;
var ColorDrawable = android.graphics.drawable.ColorDrawable;
var Color = android.graphics.Color;
var Gravity = android.view.Gravity;
var Intent = android.content.Intent;
var Uri = android.net.Uri;

//Some GUI variables

var GUI;
var menu;
var exitUI;
var menuLayout;
var addView;
 
var version = "0.3.2 ";
var NAME = "Alpha Hack";
var DEVELOPERS = "Arceus_Matt";
 
var MARK = "©";
var split = " ";
var CODE = true;

//Some GUI variables two
 
var defaultDestroyTime = [
null, 1.5, 0.6, 0.5, 2, 2, 0, -1, null, null, null, null, 0.5, 0.6, 3, 3, 3, 2, 
0.2, 0.6, 0.3, 3, 3, null, 0.8, null, 0.2, 0.7, null, null, 4, 0, 0, null, null, 
0.8, null, 0, 0, 0, 0, 3, 5, 2, 2, 2, 0, 1.5, 2, 50, 0, 0, null, 2, 2.5, null, 
3, 5, 2.5, 0, 0.6, 3.5, 3.5, 1, 3, 0.4, 0.7, 2, 1, null, null, 5, null, 3, 3, 
null, null, null, 0.1, 0.5, 0.2, 0.4, 0.6, 0, null, 2, 1, 0.4, 0.3, null, 1, 0.5, 
null, null, -1, 3, null, 1.5, null, null, 5, 0.3, 1, 0, 0, null, 2, 2, 1.5, null, 
null, 2, null, 2, null, null, null, null, null, null, null, null, null, null, null, 
null, null, 0.8, null, null, null, null, null, 2, 2, 2, null, null, 2, null, 0, 0, 
null, null, null, null, null, null, null, null, null, null, null, null, 0.8, 0.8, 
2, 2, null, null, null, null, null, null, null, null, null, null, null, 0.5, 0.1, 
5, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null,
null, null, null, null, null, null, null, null, null, null, null, null, null, null,
null, null, null, null, null, null, null, null, null, null, null, null, null, null,
null, null, null, null, null, null, null, null, null, null, null, null, null, null,
null, 0, 3.5, 50, 5, 0.6, 0.6, 5, null, null, null, null, 0
];

//Block destroy time
 
var playerDir = [0, 0, 0];
var DEG_TO_RAD = Math.PI / 180;
var playerFlySpeed = 1;
var falling = 0;
var next = 0;
var px, py, pz, lx, ly, lz, vel, saver;
var cd = 0;
var s = 0;
var Xdiff;
var Zdiff;
var Xpos;
var Zpos;
var can = 1;
var canGetHP = 1;
var HP;
var gravity = -0.07840000092983246;
var Entities = [];
var counter = 0
var alias = [];

//Player variables
 
var setspawnch = false;
var setspawn;

var coordch = false;
var coord;
 
var speedch = false;
var speed;
 
var effectch = false;
var effect;
var effects = false;
 
var passwordch = false;
var password;
 
var starterch = false;
var starter;
 
var starter2ch = false;
var starter2;
 
var starter3ch = false;
var starter3;
 
var starter4ch = false;
var starter4;
 
var starter5ch = false;
var starter5;
 
var opch = false;
var op;
 
var spawn10ch = false;
var spawn10;

var spawn11ch = false;
var spawn11;
 
var spawn12ch = false;
var spawn12;
 
var spawn13ch = false;
var spawn13;

var spawn14ch = false;
var spawn14;

var spawn15ch = false;
var spawn15;

var spawn16ch = false;
var spawn16;

var spawn17ch = false;
var spawn17;

var spawn18ch = false;
var spawn18;

var spawn19ch = false;
var spawn19;

var spawn20ch = false;
var spawn20;

var spawn21ch = false;
var spawn21;

var spawn22ch = false;
var spawn22;

var canFlych = false;
var canFly;

var expch = false;
var exp;

var spamch = false;
var spam;

var layoutch = false
var layout;

//ModPE script variables

//undefined fix:

var thisdaych = true;
var thisday;

var speededch = true;
var speeded;

//auto update variables:

var checkForUpdate=false;
var updateWindow=false; 
var newUpdate;
var updateMod;

function dip2px(dips){
    return Math.ceil(dips * ctx.getResources().getDisplayMetrics().density);
}

function checkVersion() {
    var r  = new java.lang.Runnable() {
        run: function() {
            try {
                var urls= new java.net.URL("https://raw.githubusercontent.com/ArceusMatt/ModPE/master/version");
                var check = urls.openConnection();
                check.setRequestMethod("GET");
                check.setDoOutput(true);
                check.connect();
                check.getContentLength();
                var script = check.getInputStream();
                var typeb = java.lang.reflect.Array.newInstance(java.lang.Byte.TYPE, 1024);
                var byteCount = 0; 
                var checkedVersion;
                while((byteCount = script.read(typeb)) != -1) { 
                    checkedVersion = new java.lang.String(typeb, 0, byteCount);               
                }
                newUpdate = checkedVersion;
                if(version+"\n" != checkedVersion) {
                    clientMessage("§9[Alpha] §fNew version! " + newUpdate);
                    updateWindow=true;
                }
                else if(version+"\n"==checkedVersion){
                clientMessage("§9[Alpha] No updates available");
                }
            }
            catch(err) {
                clientMessage("§9[Alpha] Update check failed ");
                if(err=="JavaException: java.net.UnknownHostException: raw.githubusercontent.com") {
                                clientMessage("§9[Alpha] No internet connection.");
                            }
                            else {
                                clientMessage("§9[Alpha]   Error: \n" + err);
                            } 
            }
        }
    }
    var threadt = new java.lang.Thread(r);
    threadt.start();
}
function updateVersion() {
    try {
        var upd = new android.app.AlertDialog.Builder(ctx);
        upd.setTitle("New version available!");
        upd.setMessage("An update to Alpha hack was found!\nWould you like to update it now?\n*Make sure to rejoin your world when updated!!*\nCurrent version: " + version + "\nNew version: " + newUpdate);
        upd.setNegativeButton("Later", new android.content.DialogInterface.OnClickListener() {
            onClick: function(par1) {
            dialog.dismiss(); 
   }
        });
        upd.setPositiveButton("Update", new android.content.DialogInterface.OnClickListener() {
            onClick: function(par1) {
                var ru  = new java.lang.Runnable() {
                    run: function() {
                        try {
                            var urls = new java.net.URL("https://raw.githubusercontent.com/ArceusMatt/ModPE/master/ALPHAHack%20Staff");
                            var check = urls.openConnection();
                            check.setRequestMethod("GET");
                            check.setDoOutput(true);
                            check.connect();
                            check.getContentLength();
                            var script = check.getInputStream();
                            var typeb = java.lang.reflect.Array.newInstance(java.lang.Byte.TYPE, 1024);
                            var byteCount = 0;
                            while((byteCount = script.read(typeb)) != -1) { 
                                updateMod += new java.lang.String(typeb, 0, byteCount);               
                            }
                            var modpeFolder = ctx.getDir("modscripts", 0);
                            var modpeFile = new java.io.File(modpeFolder, "ALPHAHack.js");
                            var update = new java.io.PrintWriter(modpeFile);
                            update.write(updateMod);
                            update.flush();
                            update.close();
                             
                            try {
                                net.zhuoweizhang.mcpelauncher.ScriptManager.setEnabled(modpeFile, false);
                                net.zhuoweizhang.mcpelauncher.ScriptManager.setEnabled(modpeFile, true);
                                clientMessage("§3[Alpha] Downloaded and enabled!");
                                   
                            }
                            catch(err) {
                                clientMessage("§9[Alpha] Error: \n" + err);
                            }
                        }
                        catch(err) {
                            clientMessage("§9[Alpha] Error: \n" + err);
                        }
                    }
                }
                var threadt = new java.lang.Thread(ru);
                threadt.start();
            }
        });
        var dialog = upd.create();
        dialog.show() 
    }
    catch(err) {
        clientMessage("§9[Alpha] Error: \n" + err);
    }
}
  
 function modTick(){
 if(checkForUpdate==false) {
        print("Checking for updates");
        ctx.runOnUiThread(new java.lang.Runnable({
            run: function() {
                try {
                    checkVersion();
                }
                catch(err) {
                    clientMessage("§9[Alpha] Error: \n"+err);
                }
            }
        }));
        checkForUpdate=true;
    }
    if(updateWindow) {
        ctx.runOnUiThread(new java.lang.Runnable({
            run: function() {
                try {
                    updateVersion();
                }
                catch(err) {
                    clientMessage("§9[Alpha] Error: \n" + err);
                }
            }
        }));
        updateWindow=false;
    } 
 }

function newLevel(){ 
 clientMessage("§9Alpha hack, §eMade by Arceus_Matt, Version: 0.3.2");
 clientMessage("§8Minecraft PE Version:§f0.13.x");

//Sends this message in chat soon as you join a world
 
ctx.runOnUiThread(new Runnable({ run: function(){
    try{
        var layout = new LinearLayout(ctx);
        layout.setOrientation(1);
        var menuBtn = new Button(ctx);
        menuBtn.setText('</> Hack');
        menuBtn.setTextColor(Color.WHITE);
        menuBtn.setOnClickListener(new View.OnClickListener({
            onClick: function(viewarg){
                mainMenu()
                exit();
            }
        }));
        layout.addView(menuBtn);

//Open GUI button
 
        GUI = new PopupWindow(layout, RelativeLayout.LayoutParams.WRAP_CONTENT, RelativeLayout.LayoutParams.WRAP_CONTENT);
        GUI.setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
        GUI.showAtLocation(ctx.getWindow().getDecorView(), Gravity.LEFT | Gravity.TOP, 50, 0);
        }catch(err){
            Toast.makeText(ctx, "An error occured: " + err, 1).show();
        }
    }}));
  
//Layout of that button
 
function mainMenu(){
    ctx.runOnUiThread(new Runnable({ run: function(){
        try{
            var menuLayout = new LinearLayout(ctx);
            var menuScroll = new ScrollView(ctx);
            var menuLayout1 = new LinearLayout(ctx);
            menuLayout.setOrientation(1);
            menuLayout1.setOrientation(1);
            menuScroll.addView(menuLayout);
            menuLayout1.addView(menuScroll);
 
            var name = new TextView(ctx);
            name.setTextSize(23);
            name.setText(NAME + split + version + MARK);
            name.setTextColor(Color.RED);
            name.setGravity(Gravity.CENTER);
            menuLayout.addView(name);

//Display of the GUI

var code2 = new android.widget.EditText(ctx);
      code2.setHint('Speed slider');
        
            menuLayout.addView(code2);

var speedProgress = 0;
var speed = new android.widget.SeekBar(ctx);
speed.setMax(3);
speed.setProgress(speedProgress);
speed.setOnSeekBarChangeListener(new android.widget.SeekBar.OnSeekBarChangeListener() {
onStopTrackingTouch: function(view)
{
speedProgress = speed.getProgress();
if(speedProgress==0)
{
ModPE.setGameSpeed(20); (0/3)
}
if(speedProgress==1)
{
ModPE.setGameSpeed(40); (1/3)
}
if(speedProgress==2)
{
ModPE.setGameSpeed(60); (2/3)
}
if(speedProgress==3)
{
ModPE.setGameSpees(); (3/3)
}
}
});
menuLayout.addView(speed);

            var creative = new Button(ctx);
            creative.setText("Creative");
            creative.setTextColor(Color.BLUE);
            creative.setOnClickListener(new View.OnClickListener({
                onClick: function(viewarg){
                    Level.setGameMode(1);
Server.sendChat("/gamemode 1")
                }
            }));
            menuLayout.addView(creative);
 
            var survival = new Button(ctx);
            survival.setText("Survival");
            survival.setTextColor(Color.BLUE);
            survival.setOnClickListener(new View.OnClickListener({
                onClick: function(viewarg){
                    Level.setGameMode(0);
Server.sendChat("/gamemode 0")
                }
            }));
            menuLayout.addView(survival);

 var spam = new Button(ctx);
            spam.setText("Spammer");
            spam.setTextColor(Color.BLUE);
            spam.setOnClickListener(new View.OnClickListener({
                onClick: function(viewarg){
Server.sendChat("**§lAlpha Hack spam§r**::        SPAM SPAM SPAM SPAM SPAM SPAM SPAM SPAM SPAM SPAM SPAM SPAM SPAM SPAM SPAM SPAM SPAM SPAM SPAM SPAM SPAM SPAM SPAM SPAM SPAM SPAM SPAM SPAM SPAM SPAM SPAM.")
clientMessage("§lAlpha Hack spam§r**::        SPAM SPAM SPAM SPAM SPAM SPAM SPAM SPAM SPAM SPAM SPAM SPAM SPAM SPAM SPAM SPAM SPAM SPAM SPAM SPAM SPAM SPAM SPAM SPAM SPAM SPAM SPAM SPAM SPAM SPAM SPAM.")
                }
            }));
            menuLayout.addView(spam); 

            coord = new Button(ctx);
            coord.setText("Coordinates");
            coord.setTextColor(Color.BLUE);
            coord.setOnClickListener(new View.OnClickListener({
                onClick: function(viewarg){
                         var cX = getPlayerX();
var cY = getPlayerY();
var cZ = getPlayerZ();
clientMessage(ChatColor.BLUE + "X:" + Math.round(cX) + " Y:" + Math.round(cY) + " Z:" + Math.round(cZ));
                }
            }));
            menuLayout.addView(coord);

             effect = new Button(ctx);
            effect.setText("Effects(crash in server)");
            effect.setTextColor(Color.BLUE);
            effect.setOnClickListener(new View.OnClickListener({
                onClick: function(viewarg){
                        Entity.addEffect(getPlayerEnt(), MobEffect.jump, 999*999, 0, false, true);
                        Entity.addEffect(getPlayerEnt(), MobEffect.damageResistance, 999*999, 0, false, true);
                        Entity.addEffect(getPlayerEnt(), MobEffect.hunger, 999*999, 0, false, true);
                        Entity.addEffect(getPlayerEnt(), MobEffect.damageBoost, 999*999, 0, false, true);
               }
            }));
            menuLayout.addView(effect);
 
var code = new android.widget.EditText(ctx);
      code.setHint('Fly in survival');
        
            menuLayout.addView(code);

            		   var toggled = false;
var canFly = new android.widget.ToggleButton(ctx);
canFly.setText("Fly in survival");
canFly.setChecked(toggled);
canFly.setOnClickListener(new android.view.View.OnClickListener({
    onClick: function(viewarg){
        if(!toggled){
            toggled = true;
Player.canFly()
Player.isFlying()
Player.setCanFly(1)
        }else{
            toggled = false;
Player.canFly()
Player.isFlying()
Player.setCanFly(0)
        }
    }
}));
menuLayout.addView(canFly);

            var day = new Button(ctx);
            day.setText("Day");
            day.setTextColor(Color.BLUE);
            day.setOnClickListener(new View.OnClickListener({
                onClick: function(viewarg){
                    Level.setTime(200);
                    Server.sendChat("/time set 200")
                }
            }));
            menuLayout.addView(day);
 
            var night = new Button(ctx);
            night.setText("Night");
            night.setTextColor(Color.BLUE);
            night.setOnClickListener(new View.OnClickListener({
                onClick: function(viewarg){
                    Level.setTime(14000);
                    Server.sendChat("/time set 14000")
                }
            }));
            menuLayout.addView(night);

//ModPE hack script, code, buttons, seekbars, messages
 
            var source = new Button(ctx);
            source.setText("My Youtube");
            source.setTextColor(Color.BLUE);
            source.setOnClickListener(new View.OnClickListener({
                onClick: function(viewarg){
                    var intentURL = new Intent(ctx);
                    intentURL.setAction(Intent.ACTION_VIEW);
                    intentURL.setData(Uri.parse("https://www.youtube.com/user/Arceusmatt"));
                    ctx.startActivity(intentURL);
                }
            }));
            menuLayout.addView(source);

//Browser open button
 
            var maker = new TextView(ctx);
            maker.setTextSize(17);
            maker.setText("Made by" + split + DEVELOPERS);
            maker.setTextColor(Color.BLUE);
            maker.setGravity(Gravity.CENTER);
            menuLayout.addView(maker);
 
//Display of DEVELOPERS below GUI

            menu = new PopupWindow(menuLayout1, ctx.getWindowManager().getDefaultDisplay().getWidth()/2, ctx.getWindowManager().getDefaultDisplay().getHeight());
            menu.setBackgroundDrawable(new ColorDrawable(Color.BLACK));
            menu.showAtLocation(ctx.getWindow().getDecorView(), Gravity.RIGHT | Gravity.TOP, 0, 0);
            }catch(error){
                Toast.makeText(ctx, "An error occured: " + error, 1).show();
            }
    }}));
}
 
function exit(){
    ctx.runOnUiThread(new Runnable({ run: function(){
        try{
            var xLayout = new LinearLayout(ctx);
            var xButton = new Button(ctx);
            xButton.setText('X');
            xButton.setTextColor(Color.RED);
            xButton.setOnClickListener(new View.OnClickListener({
                onClick: function(viewarg){
                    exitUI.dismiss();
                    menu.dismiss();
                }
            }));
            xLayout.addView(xButton);
 
            exitUI = new PopupWindow(xLayout, dip2px(40), dip2px(40));
            exitUI.setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
            exitUI.showAtLocation(ctx.getWindow().getDecorView(), Gravity.RIGHT | Gravity.TOP, 0, 0);
            }catch(exception){
                Toast.makeText(ctx, exception, 1).show();
            }
    }}));
}

//Exit button of GUI

function instaDestroy(){
    for(i = 0; i < 256; i++){
        Block.setDestroyTime(i, 0.1);
    }
}
  
function defaultDestroy(){
    for(i = 0; i < 256; i++){
        Block.setDestroyTime(i, defaultDestroyTime[i]);
    }
}

function modTick() {
    if(thisday) {
        Level.setTime(200);
    }
    if(speeded) {
        if(s==1) {
        Xpos = getPlayerX();
        Zpos = getPlayerZ();
        s = s + 1;
        }
        else if(s==3) {
        s = 1;
        Xdiff = getPlayerX()-Xpos;
        Zdiff = getPlayerZ()-Zpos;
        setVelX(getPlayerEnt(), Xdiff);
        setVelZ(getPlayerEnt(), Zdiff);
        Xdiff=0;
        Zdiff=0;
        }
        if(s!=1) {
            s = s + 1;
//Some other scripts
        }
    }
}
//End of mod.
}
